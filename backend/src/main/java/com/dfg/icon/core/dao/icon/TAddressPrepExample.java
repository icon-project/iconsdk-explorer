package com.dfg.icon.core.dao.icon;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TAddressPrepExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_ADDRESS_PREP
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_ADDRESS_PREP
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_ADDRESS_PREP
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ADDRESS_PREP
     *
     * @mbg.generated
     */
    public TAddressPrepExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ADDRESS_PREP
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ADDRESS_PREP
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ADDRESS_PREP
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ADDRESS_PREP
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ADDRESS_PREP
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ADDRESS_PREP
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ADDRESS_PREP
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ADDRESS_PREP
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ADDRESS_PREP
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ADDRESS_PREP
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_ADDRESS_PREP
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andAddressIsNull() {
            addCriterion("address is null");
            return (Criteria) this;
        }

        public Criteria andAddressIsNotNull() {
            addCriterion("address is not null");
            return (Criteria) this;
        }

        public Criteria andAddressEqualTo(String value) {
            addCriterion("address =", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotEqualTo(String value) {
            addCriterion("address <>", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThan(String value) {
            addCriterion("address >", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThanOrEqualTo(String value) {
            addCriterion("address >=", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLessThan(String value) {
            addCriterion("address <", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLessThanOrEqualTo(String value) {
            addCriterion("address <=", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLike(String value) {
            addCriterion("address like", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotLike(String value) {
            addCriterion("address not like", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressIn(List<String> values) {
            addCriterion("address in", values, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotIn(List<String> values) {
            addCriterion("address not in", values, "address");
            return (Criteria) this;
        }

        public Criteria andAddressBetween(String value1, String value2) {
            addCriterion("address between", value1, value2, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotBetween(String value1, String value2) {
            addCriterion("address not between", value1, value2, "address");
            return (Criteria) this;
        }

        public Criteria andRepNameIsNull() {
            addCriterion("rep_name is null");
            return (Criteria) this;
        }

        public Criteria andRepNameIsNotNull() {
            addCriterion("rep_name is not null");
            return (Criteria) this;
        }

        public Criteria andRepNameEqualTo(String value) {
            addCriterion("rep_name =", value, "repName");
            return (Criteria) this;
        }

        public Criteria andRepNameNotEqualTo(String value) {
            addCriterion("rep_name <>", value, "repName");
            return (Criteria) this;
        }

        public Criteria andRepNameGreaterThan(String value) {
            addCriterion("rep_name >", value, "repName");
            return (Criteria) this;
        }

        public Criteria andRepNameGreaterThanOrEqualTo(String value) {
            addCriterion("rep_name >=", value, "repName");
            return (Criteria) this;
        }

        public Criteria andRepNameLessThan(String value) {
            addCriterion("rep_name <", value, "repName");
            return (Criteria) this;
        }

        public Criteria andRepNameLessThanOrEqualTo(String value) {
            addCriterion("rep_name <=", value, "repName");
            return (Criteria) this;
        }

        public Criteria andRepNameLike(String value) {
            addCriterion("rep_name like", value, "repName");
            return (Criteria) this;
        }

        public Criteria andRepNameNotLike(String value) {
            addCriterion("rep_name not like", value, "repName");
            return (Criteria) this;
        }

        public Criteria andRepNameIn(List<String> values) {
            addCriterion("rep_name in", values, "repName");
            return (Criteria) this;
        }

        public Criteria andRepNameNotIn(List<String> values) {
            addCriterion("rep_name not in", values, "repName");
            return (Criteria) this;
        }

        public Criteria andRepNameBetween(String value1, String value2) {
            addCriterion("rep_name between", value1, value2, "repName");
            return (Criteria) this;
        }

        public Criteria andRepNameNotBetween(String value1, String value2) {
            addCriterion("rep_name not between", value1, value2, "repName");
            return (Criteria) this;
        }

        public Criteria andBlockCountIsNull() {
            addCriterion("block_count is null");
            return (Criteria) this;
        }

        public Criteria andBlockCountIsNotNull() {
            addCriterion("block_count is not null");
            return (Criteria) this;
        }

        public Criteria andBlockCountEqualTo(Integer value) {
            addCriterion("block_count =", value, "blockCount");
            return (Criteria) this;
        }

        public Criteria andBlockCountNotEqualTo(Integer value) {
            addCriterion("block_count <>", value, "blockCount");
            return (Criteria) this;
        }

        public Criteria andBlockCountGreaterThan(Integer value) {
            addCriterion("block_count >", value, "blockCount");
            return (Criteria) this;
        }

        public Criteria andBlockCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("block_count >=", value, "blockCount");
            return (Criteria) this;
        }

        public Criteria andBlockCountLessThan(Integer value) {
            addCriterion("block_count <", value, "blockCount");
            return (Criteria) this;
        }

        public Criteria andBlockCountLessThanOrEqualTo(Integer value) {
            addCriterion("block_count <=", value, "blockCount");
            return (Criteria) this;
        }

        public Criteria andBlockCountIn(List<Integer> values) {
            addCriterion("block_count in", values, "blockCount");
            return (Criteria) this;
        }

        public Criteria andBlockCountNotIn(List<Integer> values) {
            addCriterion("block_count not in", values, "blockCount");
            return (Criteria) this;
        }

        public Criteria andBlockCountBetween(Integer value1, Integer value2) {
            addCriterion("block_count between", value1, value2, "blockCount");
            return (Criteria) this;
        }

        public Criteria andBlockCountNotBetween(Integer value1, Integer value2) {
            addCriterion("block_count not between", value1, value2, "blockCount");
            return (Criteria) this;
        }

        public Criteria andIsPrepIsNull() {
            addCriterion("is_prep is null");
            return (Criteria) this;
        }

        public Criteria andIsPrepIsNotNull() {
            addCriterion("is_prep is not null");
            return (Criteria) this;
        }

        public Criteria andIsPrepEqualTo(Boolean value) {
            addCriterion("is_prep =", value, "isPrep");
            return (Criteria) this;
        }

        public Criteria andIsPrepNotEqualTo(Boolean value) {
            addCriterion("is_prep <>", value, "isPrep");
            return (Criteria) this;
        }

        public Criteria andIsPrepGreaterThan(Boolean value) {
            addCriterion("is_prep >", value, "isPrep");
            return (Criteria) this;
        }

        public Criteria andIsPrepGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_prep >=", value, "isPrep");
            return (Criteria) this;
        }

        public Criteria andIsPrepLessThan(Boolean value) {
            addCriterion("is_prep <", value, "isPrep");
            return (Criteria) this;
        }

        public Criteria andIsPrepLessThanOrEqualTo(Boolean value) {
            addCriterion("is_prep <=", value, "isPrep");
            return (Criteria) this;
        }

        public Criteria andIsPrepIn(List<Boolean> values) {
            addCriterion("is_prep in", values, "isPrep");
            return (Criteria) this;
        }

        public Criteria andIsPrepNotIn(List<Boolean> values) {
            addCriterion("is_prep not in", values, "isPrep");
            return (Criteria) this;
        }

        public Criteria andIsPrepBetween(Boolean value1, Boolean value2) {
            addCriterion("is_prep between", value1, value2, "isPrep");
            return (Criteria) this;
        }

        public Criteria andIsPrepNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_prep not between", value1, value2, "isPrep");
            return (Criteria) this;
        }

        public Criteria andStartTermIsNull() {
            addCriterion("start_term is null");
            return (Criteria) this;
        }

        public Criteria andStartTermIsNotNull() {
            addCriterion("start_term is not null");
            return (Criteria) this;
        }

        public Criteria andStartTermEqualTo(Integer value) {
            addCriterion("start_term =", value, "startTerm");
            return (Criteria) this;
        }

        public Criteria andStartTermNotEqualTo(Integer value) {
            addCriterion("start_term <>", value, "startTerm");
            return (Criteria) this;
        }

        public Criteria andStartTermGreaterThan(Integer value) {
            addCriterion("start_term >", value, "startTerm");
            return (Criteria) this;
        }

        public Criteria andStartTermGreaterThanOrEqualTo(Integer value) {
            addCriterion("start_term >=", value, "startTerm");
            return (Criteria) this;
        }

        public Criteria andStartTermLessThan(Integer value) {
            addCriterion("start_term <", value, "startTerm");
            return (Criteria) this;
        }

        public Criteria andStartTermLessThanOrEqualTo(Integer value) {
            addCriterion("start_term <=", value, "startTerm");
            return (Criteria) this;
        }

        public Criteria andStartTermIn(List<Integer> values) {
            addCriterion("start_term in", values, "startTerm");
            return (Criteria) this;
        }

        public Criteria andStartTermNotIn(List<Integer> values) {
            addCriterion("start_term not in", values, "startTerm");
            return (Criteria) this;
        }

        public Criteria andStartTermBetween(Integer value1, Integer value2) {
            addCriterion("start_term between", value1, value2, "startTerm");
            return (Criteria) this;
        }

        public Criteria andStartTermNotBetween(Integer value1, Integer value2) {
            addCriterion("start_term not between", value1, value2, "startTerm");
            return (Criteria) this;
        }

        public Criteria andEndTermIsNull() {
            addCriterion("end_term is null");
            return (Criteria) this;
        }

        public Criteria andEndTermIsNotNull() {
            addCriterion("end_term is not null");
            return (Criteria) this;
        }

        public Criteria andEndTermEqualTo(Integer value) {
            addCriterion("end_term =", value, "endTerm");
            return (Criteria) this;
        }

        public Criteria andEndTermNotEqualTo(Integer value) {
            addCriterion("end_term <>", value, "endTerm");
            return (Criteria) this;
        }

        public Criteria andEndTermGreaterThan(Integer value) {
            addCriterion("end_term >", value, "endTerm");
            return (Criteria) this;
        }

        public Criteria andEndTermGreaterThanOrEqualTo(Integer value) {
            addCriterion("end_term >=", value, "endTerm");
            return (Criteria) this;
        }

        public Criteria andEndTermLessThan(Integer value) {
            addCriterion("end_term <", value, "endTerm");
            return (Criteria) this;
        }

        public Criteria andEndTermLessThanOrEqualTo(Integer value) {
            addCriterion("end_term <=", value, "endTerm");
            return (Criteria) this;
        }

        public Criteria andEndTermIn(List<Integer> values) {
            addCriterion("end_term in", values, "endTerm");
            return (Criteria) this;
        }

        public Criteria andEndTermNotIn(List<Integer> values) {
            addCriterion("end_term not in", values, "endTerm");
            return (Criteria) this;
        }

        public Criteria andEndTermBetween(Integer value1, Integer value2) {
            addCriterion("end_term between", value1, value2, "endTerm");
            return (Criteria) this;
        }

        public Criteria andEndTermNotBetween(Integer value1, Integer value2) {
            addCriterion("end_term not between", value1, value2, "endTerm");
            return (Criteria) this;
        }

        public Criteria andUrlIsNull() {
            addCriterion("url is null");
            return (Criteria) this;
        }

        public Criteria andUrlIsNotNull() {
            addCriterion("url is not null");
            return (Criteria) this;
        }

        public Criteria andUrlEqualTo(String value) {
            addCriterion("url =", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotEqualTo(String value) {
            addCriterion("url <>", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlGreaterThan(String value) {
            addCriterion("url >", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlGreaterThanOrEqualTo(String value) {
            addCriterion("url >=", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlLessThan(String value) {
            addCriterion("url <", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlLessThanOrEqualTo(String value) {
            addCriterion("url <=", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlLike(String value) {
            addCriterion("url like", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotLike(String value) {
            addCriterion("url not like", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlIn(List<String> values) {
            addCriterion("url in", values, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotIn(List<String> values) {
            addCriterion("url not in", values, "url");
            return (Criteria) this;
        }

        public Criteria andUrlBetween(String value1, String value2) {
            addCriterion("url between", value1, value2, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotBetween(String value1, String value2) {
            addCriterion("url not between", value1, value2, "url");
            return (Criteria) this;
        }

        public Criteria andRepHashIsNull() {
            addCriterion("rep_hash is null");
            return (Criteria) this;
        }

        public Criteria andRepHashIsNotNull() {
            addCriterion("rep_hash is not null");
            return (Criteria) this;
        }

        public Criteria andRepHashEqualTo(String value) {
            addCriterion("rep_hash =", value, "repHash");
            return (Criteria) this;
        }

        public Criteria andRepHashNotEqualTo(String value) {
            addCriterion("rep_hash <>", value, "repHash");
            return (Criteria) this;
        }

        public Criteria andRepHashGreaterThan(String value) {
            addCriterion("rep_hash >", value, "repHash");
            return (Criteria) this;
        }

        public Criteria andRepHashGreaterThanOrEqualTo(String value) {
            addCriterion("rep_hash >=", value, "repHash");
            return (Criteria) this;
        }

        public Criteria andRepHashLessThan(String value) {
            addCriterion("rep_hash <", value, "repHash");
            return (Criteria) this;
        }

        public Criteria andRepHashLessThanOrEqualTo(String value) {
            addCriterion("rep_hash <=", value, "repHash");
            return (Criteria) this;
        }

        public Criteria andRepHashLike(String value) {
            addCriterion("rep_hash like", value, "repHash");
            return (Criteria) this;
        }

        public Criteria andRepHashNotLike(String value) {
            addCriterion("rep_hash not like", value, "repHash");
            return (Criteria) this;
        }

        public Criteria andRepHashIn(List<String> values) {
            addCriterion("rep_hash in", values, "repHash");
            return (Criteria) this;
        }

        public Criteria andRepHashNotIn(List<String> values) {
            addCriterion("rep_hash not in", values, "repHash");
            return (Criteria) this;
        }

        public Criteria andRepHashBetween(String value1, String value2) {
            addCriterion("rep_hash between", value1, value2, "repHash");
            return (Criteria) this;
        }

        public Criteria andRepHashNotBetween(String value1, String value2) {
            addCriterion("rep_hash not between", value1, value2, "repHash");
            return (Criteria) this;
        }

        public Criteria andUpdateDateIsNull() {
            addCriterion("update_date is null");
            return (Criteria) this;
        }

        public Criteria andUpdateDateIsNotNull() {
            addCriterion("update_date is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateDateEqualTo(Date value) {
            addCriterion("update_date =", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateNotEqualTo(Date value) {
            addCriterion("update_date <>", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateGreaterThan(Date value) {
            addCriterion("update_date >", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateGreaterThanOrEqualTo(Date value) {
            addCriterion("update_date >=", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateLessThan(Date value) {
            addCriterion("update_date <", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateLessThanOrEqualTo(Date value) {
            addCriterion("update_date <=", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateIn(List<Date> values) {
            addCriterion("update_date in", values, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateNotIn(List<Date> values) {
            addCriterion("update_date not in", values, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateBetween(Date value1, Date value2) {
            addCriterion("update_date between", value1, value2, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateNotBetween(Date value1, Date value2) {
            addCriterion("update_date not between", value1, value2, "updateDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_ADDRESS_PREP
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_ADDRESS_PREP
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}