package com.dfg.icon.core.dao.icon;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TSchedulerFlagExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_SCHEDULER_FLAG
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_SCHEDULER_FLAG
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table T_SCHEDULER_FLAG
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_SCHEDULER_FLAG
     *
     * @mbg.generated
     */
    public TSchedulerFlagExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_SCHEDULER_FLAG
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_SCHEDULER_FLAG
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_SCHEDULER_FLAG
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_SCHEDULER_FLAG
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_SCHEDULER_FLAG
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_SCHEDULER_FLAG
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_SCHEDULER_FLAG
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_SCHEDULER_FLAG
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_SCHEDULER_FLAG
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_SCHEDULER_FLAG
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_SCHEDULER_FLAG
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andScheduleNameIsNull() {
            addCriterion("schedule_name is null");
            return (Criteria) this;
        }

        public Criteria andScheduleNameIsNotNull() {
            addCriterion("schedule_name is not null");
            return (Criteria) this;
        }

        public Criteria andScheduleNameEqualTo(String value) {
            addCriterion("schedule_name =", value, "scheduleName");
            return (Criteria) this;
        }

        public Criteria andScheduleNameNotEqualTo(String value) {
            addCriterion("schedule_name <>", value, "scheduleName");
            return (Criteria) this;
        }

        public Criteria andScheduleNameGreaterThan(String value) {
            addCriterion("schedule_name >", value, "scheduleName");
            return (Criteria) this;
        }

        public Criteria andScheduleNameGreaterThanOrEqualTo(String value) {
            addCriterion("schedule_name >=", value, "scheduleName");
            return (Criteria) this;
        }

        public Criteria andScheduleNameLessThan(String value) {
            addCriterion("schedule_name <", value, "scheduleName");
            return (Criteria) this;
        }

        public Criteria andScheduleNameLessThanOrEqualTo(String value) {
            addCriterion("schedule_name <=", value, "scheduleName");
            return (Criteria) this;
        }

        public Criteria andScheduleNameLike(String value) {
            addCriterion("schedule_name like", value, "scheduleName");
            return (Criteria) this;
        }

        public Criteria andScheduleNameNotLike(String value) {
            addCriterion("schedule_name not like", value, "scheduleName");
            return (Criteria) this;
        }

        public Criteria andScheduleNameIn(List<String> values) {
            addCriterion("schedule_name in", values, "scheduleName");
            return (Criteria) this;
        }

        public Criteria andScheduleNameNotIn(List<String> values) {
            addCriterion("schedule_name not in", values, "scheduleName");
            return (Criteria) this;
        }

        public Criteria andScheduleNameBetween(String value1, String value2) {
            addCriterion("schedule_name between", value1, value2, "scheduleName");
            return (Criteria) this;
        }

        public Criteria andScheduleNameNotBetween(String value1, String value2) {
            addCriterion("schedule_name not between", value1, value2, "scheduleName");
            return (Criteria) this;
        }

        public Criteria andActiveYnIsNull() {
            addCriterion("active_yn is null");
            return (Criteria) this;
        }

        public Criteria andActiveYnIsNotNull() {
            addCriterion("active_yn is not null");
            return (Criteria) this;
        }

        public Criteria andActiveYnEqualTo(String value) {
            addCriterion("active_yn =", value, "activeYn");
            return (Criteria) this;
        }

        public Criteria andActiveYnNotEqualTo(String value) {
            addCriterion("active_yn <>", value, "activeYn");
            return (Criteria) this;
        }

        public Criteria andActiveYnGreaterThan(String value) {
            addCriterion("active_yn >", value, "activeYn");
            return (Criteria) this;
        }

        public Criteria andActiveYnGreaterThanOrEqualTo(String value) {
            addCriterion("active_yn >=", value, "activeYn");
            return (Criteria) this;
        }

        public Criteria andActiveYnLessThan(String value) {
            addCriterion("active_yn <", value, "activeYn");
            return (Criteria) this;
        }

        public Criteria andActiveYnLessThanOrEqualTo(String value) {
            addCriterion("active_yn <=", value, "activeYn");
            return (Criteria) this;
        }

        public Criteria andActiveYnLike(String value) {
            addCriterion("active_yn like", value, "activeYn");
            return (Criteria) this;
        }

        public Criteria andActiveYnNotLike(String value) {
            addCriterion("active_yn not like", value, "activeYn");
            return (Criteria) this;
        }

        public Criteria andActiveYnIn(List<String> values) {
            addCriterion("active_yn in", values, "activeYn");
            return (Criteria) this;
        }

        public Criteria andActiveYnNotIn(List<String> values) {
            addCriterion("active_yn not in", values, "activeYn");
            return (Criteria) this;
        }

        public Criteria andActiveYnBetween(String value1, String value2) {
            addCriterion("active_yn between", value1, value2, "activeYn");
            return (Criteria) this;
        }

        public Criteria andActiveYnNotBetween(String value1, String value2) {
            addCriterion("active_yn not between", value1, value2, "activeYn");
            return (Criteria) this;
        }

        public Criteria andActiveServerIsNull() {
            addCriterion("active_server is null");
            return (Criteria) this;
        }

        public Criteria andActiveServerIsNotNull() {
            addCriterion("active_server is not null");
            return (Criteria) this;
        }

        public Criteria andActiveServerEqualTo(String value) {
            addCriterion("active_server =", value, "activeServer");
            return (Criteria) this;
        }

        public Criteria andActiveServerNotEqualTo(String value) {
            addCriterion("active_server <>", value, "activeServer");
            return (Criteria) this;
        }

        public Criteria andActiveServerGreaterThan(String value) {
            addCriterion("active_server >", value, "activeServer");
            return (Criteria) this;
        }

        public Criteria andActiveServerGreaterThanOrEqualTo(String value) {
            addCriterion("active_server >=", value, "activeServer");
            return (Criteria) this;
        }

        public Criteria andActiveServerLessThan(String value) {
            addCriterion("active_server <", value, "activeServer");
            return (Criteria) this;
        }

        public Criteria andActiveServerLessThanOrEqualTo(String value) {
            addCriterion("active_server <=", value, "activeServer");
            return (Criteria) this;
        }

        public Criteria andActiveServerLike(String value) {
            addCriterion("active_server like", value, "activeServer");
            return (Criteria) this;
        }

        public Criteria andActiveServerNotLike(String value) {
            addCriterion("active_server not like", value, "activeServer");
            return (Criteria) this;
        }

        public Criteria andActiveServerIn(List<String> values) {
            addCriterion("active_server in", values, "activeServer");
            return (Criteria) this;
        }

        public Criteria andActiveServerNotIn(List<String> values) {
            addCriterion("active_server not in", values, "activeServer");
            return (Criteria) this;
        }

        public Criteria andActiveServerBetween(String value1, String value2) {
            addCriterion("active_server between", value1, value2, "activeServer");
            return (Criteria) this;
        }

        public Criteria andActiveServerNotBetween(String value1, String value2) {
            addCriterion("active_server not between", value1, value2, "activeServer");
            return (Criteria) this;
        }

        public Criteria andStartPositionIsNull() {
            addCriterion("start_position is null");
            return (Criteria) this;
        }

        public Criteria andStartPositionIsNotNull() {
            addCriterion("start_position is not null");
            return (Criteria) this;
        }

        public Criteria andStartPositionEqualTo(String value) {
            addCriterion("start_position =", value, "startPosition");
            return (Criteria) this;
        }

        public Criteria andStartPositionNotEqualTo(String value) {
            addCriterion("start_position <>", value, "startPosition");
            return (Criteria) this;
        }

        public Criteria andStartPositionGreaterThan(String value) {
            addCriterion("start_position >", value, "startPosition");
            return (Criteria) this;
        }

        public Criteria andStartPositionGreaterThanOrEqualTo(String value) {
            addCriterion("start_position >=", value, "startPosition");
            return (Criteria) this;
        }

        public Criteria andStartPositionLessThan(String value) {
            addCriterion("start_position <", value, "startPosition");
            return (Criteria) this;
        }

        public Criteria andStartPositionLessThanOrEqualTo(String value) {
            addCriterion("start_position <=", value, "startPosition");
            return (Criteria) this;
        }

        public Criteria andStartPositionLike(String value) {
            addCriterion("start_position like", value, "startPosition");
            return (Criteria) this;
        }

        public Criteria andStartPositionNotLike(String value) {
            addCriterion("start_position not like", value, "startPosition");
            return (Criteria) this;
        }

        public Criteria andStartPositionIn(List<String> values) {
            addCriterion("start_position in", values, "startPosition");
            return (Criteria) this;
        }

        public Criteria andStartPositionNotIn(List<String> values) {
            addCriterion("start_position not in", values, "startPosition");
            return (Criteria) this;
        }

        public Criteria andStartPositionBetween(String value1, String value2) {
            addCriterion("start_position between", value1, value2, "startPosition");
            return (Criteria) this;
        }

        public Criteria andStartPositionNotBetween(String value1, String value2) {
            addCriterion("start_position not between", value1, value2, "startPosition");
            return (Criteria) this;
        }

        public Criteria andUpdateDateIsNull() {
            addCriterion("update_date is null");
            return (Criteria) this;
        }

        public Criteria andUpdateDateIsNotNull() {
            addCriterion("update_date is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateDateEqualTo(Date value) {
            addCriterion("update_date =", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateNotEqualTo(Date value) {
            addCriterion("update_date <>", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateGreaterThan(Date value) {
            addCriterion("update_date >", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateGreaterThanOrEqualTo(Date value) {
            addCriterion("update_date >=", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateLessThan(Date value) {
            addCriterion("update_date <", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateLessThanOrEqualTo(Date value) {
            addCriterion("update_date <=", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateIn(List<Date> values) {
            addCriterion("update_date in", values, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateNotIn(List<Date> values) {
            addCriterion("update_date not in", values, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateBetween(Date value1, Date value2) {
            addCriterion("update_date between", value1, value2, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateNotBetween(Date value1, Date value2) {
            addCriterion("update_date not between", value1, value2, "updateDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_SCHEDULER_FLAG
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table T_SCHEDULER_FLAG
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}