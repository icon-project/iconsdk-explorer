<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dfg.icon.core.mappers.icon.TransactionMapper">

		<!-- 최근 트랜잭션 정보 조회 -->
		<select id="selectRecentTxList"
			parameterType="com.dfg.icon.web.v3.dto.PageReq"
			resultType="com.dfg.icon.web.v3.dto.TxDetail">
			select
				tx_hash as txHash ,
				height as height ,
				create_date as createDate ,
				from_addr as fromAddr ,
				to_addr as toAddr ,
				ifnull(tx_type,-1) as txType,
				ifnull(data_type, '-') as dataType,
				ifnull(amount,'-') as amount,
				ifnull(fee,'-') as fee,
				ifnull(state, 3) as state,
				ifnull(step_limit, '-') as stepLimit,
				ifnull(step_used_tx, '-') as stepUsedByTxn,
				ifnull(step_price, '-') as stepPrice
			from
				T_TRANSACTION
			order by height desc
			limit ${page} , ${counting}
		</select>

		<!-- 전체 트랜잭션 정보 조회 -->
		<select id="selectTotalTxList"
			parameterType="com.dfg.icon.web.v3.dto.PageReq"
			resultType="com.dfg.icon.web.v3.dto.TxDetail">
			select
				tx_hash as txHash ,
				height as height ,
				DATE_FORMAT(create_date, "%Y-%m-%d %H:%i:%s") as createDate ,
				from_addr as fromAddr ,
				to_addr as toAddr ,
				ifnull(tx_type , -1) as txType,
				ifnull(data_type,'-') as dataType,
				ifnull(amount,'-') as amount,
				ifnull(fee,'-') as fee,
				ifnull(state,3) as state
			from
				T_TRANSACTION_TOTAL
			where 1=1
		  	<if test="address != null">
				and (from_addr = #{address}	or to_addr = #{address})
			</if>
			<if test="state != null">
				and state = #{state}
			</if>
			<if test="txType != null">
				and tx_type = #{txType}
			</if>
			order by create_date desc
			limit ${page} , ${counting}
	</select>

		<!-- 트랜잭션의 블록 높이 조회 -->
		<select id="selectTxHeight" resultType="java.lang.Integer">
			select 
				height
			from 
				T_TRANSACTION_TOTAL
			where 
				tx_hash = #{txHash , jdbcType=VARCHAR}
		
		</select>

		<!-- 트랜잭션  상세 내역  조회-->
		<select id="selectTxDetail"
				parameterType="com.dfg.icon.web.v3.dto.PageReq"
				resultType="com.dfg.icon.web.v3.dto.TxDetail">
	
			select 
				T.tx_hash as txHash , 
				T.height as height , 
				DATE_FORMAT(T.create_date, "%Y-%m-%d %H:%i:%s") as createDate ,
				T.from_addr as fromAddr , 
				T.to_addr as toAddr ,
				ifnull(T.tx_type,-1) as txType,
				ifnull(T.amount,'-') as amount,
				ifnull(T.state, 3) as state,
				ifnull(T.fee,'-') as fee,
				ifnull(T.step_limit, '-') as stepLimit,
				ifnull(T.step_used_tx, '-') as stepUsedByTxn,
				ifnull(T.step_price, '-') as stepPrice,
				TData.data_body as dataString
				<!--  
				TToken.to_addr as toTokenAddr ,
				TToken.quantity as quantity ,
				TToken.irc_version as ircVersion
				-->
				
			from 
				T_TRANSACTION_TOTAL as T
				inner join T_TX_DATA as TData on T.tx_hash = TData.tx_hash
			
				<!--  
				LEFT JOIN T_TOKEN_TX as TToken ON T.tx_hash = TToken.tx_hash
				-->
			where 
				T.tx_hash = #{txHash , jdbcType=VARCHAR}
		
		</select>



	<insert id="insertTxArray" parameterType="java.util.List">
		INSERT INTO T_TRANSACTION (
			tx_hash,
			height,
			create_date,
			from_addr,
			to_addr,
			fee,
			amount,
			tx_type,
			state,
			contract_addr
			)
			VALUES
			<foreach collection="list" item="element" index="index" open="(" separator="),(" close=")">
				#{element.txHash},
				#{element.height},
				#{element.createDate},
				#{element.fromAddr},
				#{element.toAddr},
				#{element.fee},
				#{element.amount} ,
				#{element.txType} ,
				#{element.state} ,
				#{element.contractAddr}
			</foreach>
	</insert>

	<insert id="insertTxTotalArray" parameterType="java.util.List">
		INSERT INTO T_TRANSACTION_TOTAL (
		tx_hash,
		hash,
		height,
		create_date,
		from_addr,
		to_addr,
		fee,
		amount,
		step_limit , 
		step_used_tx ,  
		step_price ,
		data_type,
		version,
		error_code ,
		error_msg,
		tx_type,
		state,
		internal_tx_count,
		contract_addr)
		VALUES
		<foreach collection="list" item="element" index="index" open="(" separator="),(" close=")">
			#{element.txHash},
			#{element.hash},
			#{element.height},
			#{element.createDate},
			#{element.fromAddr},
			#{element.toAddr},
			#{element.fee},
			#{element.amount},
			#{element.stepLimit} , 
			#{element.stepUsedTx} , 
			#{element.stepPrice} ,
			#{element.dataType} ,
			#{element.version} ,
			#{element.errorCode} ,
			#{element.errorMsg} ,
			#{element.txType} ,
			#{element.state} ,
			#{element.internalTxCount} ,
			#{element.contractAddr}
		</foreach>
	</insert>

	<!-- txData 에 데이터 삽입  -->
	<insert id="insertTxDataArray" parameterType="java.util.List">
		INSERT INTO T_TX_DATA (
			TX_HASH,
			DATA_BODY
		)
		VALUES
		<foreach collection="list" item="element" index="index" open="(" separator="),(" close=")">
			#{element.txHash},
			#{element.dataBody}
		</foreach>
	</insert>

	<!-- txView 에 데이터 삽입  -->
	<insert id="insertTxViewArray" parameterType="java.util.List">
		INSERT INTO T_TRANSACTION_VIEW (
			TX_HASH,
			HEIGHT,
			ADDRESS,
			ADDRESS_TYPE,
			TX_TYPE
		)
		VALUES
		<foreach collection="list" item="element" index="index" open="(" separator="),(" close=")">
			#{element.txHash},
			#{element.height},
			#{element.address},
			#{element.addressType},
			#{element.txType}
		</foreach>
	</insert>

	<insert id="insertFeeDetails" parameterType="java.util.List">
		INSERT INTO T_FEE_DETAILS (
		tx_hash,
		step_used_details
		)
		VALUES
		<foreach collection="list" item="element" index="index" open="(" separator="),(" close=")">
			#{element.txHash},
			#{element.stepUsedDetails}
		</foreach>
	</insert>

	<!-- txTokenView 에 데이터 삽입  -->
	<insert id="insertTxTokenViewArray" parameterType="java.util.List">
		INSERT INTO T_TOKEN_TX_VIEW (
			TX_HASH,
			TX_INDEX,
			BLOCK_HEIGHT,
			CONTRACT_ADDR,
			ADDRESS,
			ADDRESS_TYPE
		)
		VALUES
		<foreach collection="list" item="element" index="index" open="(" separator="),(" close=")">
			#{element.txHash},
			#{element.txIndex},
			#{element.blockHeight},
			#{element.contractAddr},
			#{element.address},
			#{element.addressType}
		</foreach>
	</insert>

	<!--Internal Tx를 저장 -->
	<insert id="insertInternalTx" parameterType="java.util.List">
		INSERT INTO T_INTERNAL_TX (
		parent_tx_hash,
		tx_index ,
		contract_addr,
		height,
		create_date,
		from_addr,
		to_addr ,
		amount )
		VALUES
		<foreach collection="list" item="element" index="index" open="(" separator="),(" close=")">
			#{element.parentTxHash},
			#{element.txIndex},
			#{element.contractAddr},
			#{element.height},
			#{element.createDate},
			#{element.fromAddr} ,
			#{element.toAddr} ,
			#{element.amount}
		</foreach>
	</insert>

	<!--Internal Tx를 저장 -->
	<insert id="insertInternalTxView" parameterType="java.util.List">
		INSERT INTO T_INTERNAL_TX_VIEW (
		parent_tx_hash,
		tx_index ,
		address,
		address_type)
		VALUES
		<foreach collection="list" item="element" index="index" open="(" separator="),(" close=")">
			#{element.parentTxHash},
			#{element.txIndex},
			#{element.address},
			#{element.addressType}
		</foreach>
	</insert>

	<!-- 특정 위치의 날짜값 조회  -->
	<select id="selectCreateDateByLimit"
			parameterType="Integer"
			resultType="String">
			select height from T_TRANSACTION
			order by create_date desc
			limit #{limit} , 1
	</select>

	<select id="selectTransactionByLimit"
			parameterType="Integer"
			resultType="com.dfg.icon.core.dao.icon.TTransaction">
		select height, create_date createDate from T_TRANSACTION
		order by height desc, create_date desc
		limit #{limit} , 1
	</select>

	<!-- 특정 위치의 날짜값 조회 후 이후 데이터 삭제   -->
	<delete id="deleteCreateDateByLimit" parameterType="String">
			delete from T_TRANSACTION
			where height &lt; #{height}
	</delete>

	<delete id="deleteTransactionByLimit" parameterType="com.dfg.icon.core.dao.icon.TTransaction">
		delete from T_TRANSACTION
		where height &lt;= #{height} and create_date &lt; #{createDate}
	</delete>


	<update id="updateTxCancel" parameterType="com.dfg.icon.core.dao.icon.TContractHistory">
		UPDATE T_TRANSACTION
		SET tx_type = 9
		WHERE tx_hash = #{createTx}
	</update>

	<update id="updateTxTotalCancel" parameterType="com.dfg.icon.core.dao.icon.TContractHistory">
		UPDATE T_TRANSACTION_TOTAL
		SET tx_type = 9
		WHERE tx_hash = #{createTx}
	</update>

	<update id="updateTxViewCancel" parameterType="com.dfg.icon.core.dao.icon.TContractHistory">
		UPDATE T_TRANSACTION_VIEW
		SET tx_type = 9
		WHERE tx_hash = #{createTx}
	</update>
</mapper>